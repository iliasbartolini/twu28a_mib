apply plugin: 'java'
apply plugin: 'jetty'
apply plugin: 'war'
apply plugin: 'idea'

apply from:"file:gradleplugins/emmaPlugin/emma.gradle"

repositories {
    mavenCentral()
}

dependencies {
    compile 'mysql:mysql-connector-java:5.1.21',
            'org.mybatis:mybatis:3.1.1',
            'org.mybatis:mybatis-spring:1.1.1',
            'javax.servlet:servlet-api:2.5',
            'org.springframework:spring-core:3.1.1.RELEASE',
            'org.springframework:spring-webmvc:3.1.1.RELEASE',
            'org.springframework:spring-web:3.1.1.RELEASE',
            'commons-dbcp:commons-dbcp:1.4',
            'org.springframework:spring-orm:3.1.0.RELEASE',
            'com.h2database:h2:1.3.167',
            'org.freemarker:freemarker:2.3.19',
            'ch.qos.logback:logback-classic:1.0.0',
            'commons-lang:commons-lang:2.6',
            'hsqldb:hsqldb:1.8.0.10',
            'com.google.code.gson:gson:2.2.2'


    emma "emma:emma:2.0.5312"
    emma "emma:emma_ant:2.0.5312"

    testCompile 'junit:junit:4.10',
            'org.springframework:spring-test:3.1.1.RELEASE',
            'org.mockito:mockito-all:1.9.0',
            'org.testng:testng:6.1.1',
            'org.seleniumhq.selenium:selenium-java:2.23.0',
            'org.seleniumhq.selenium:selenium-firefox-driver:2.23.0',
            'mysql:mysql-connector-java:5.1.21',
            'org.mybatis:mybatis:3.1.1',
            'org.mybatis:mybatis-spring:1.1.1'
}

jettyRun {
    contextPath = 'mib'
    httpPort = 9092 // Warren request to change port
}

test {
    exclude '**/functional/com/thoughtworks/**/*.*'
}

task jasmineTest(type: Exec) {
    workingDir "src/test/javascript"
    commandLine = ["phantomjs", "lib/phantom-jasmine/run_jasmine_test.coffee", "SpecRunner.html"]
}

task functionalTest(type: Test, dependsOn: "jasmineTest") {
   include '**/functional/com/thoughtworks/**/*.*'
}

functionalTest.doFirst {
    jettyRun.httpPort = 9876
    jettyRun.daemon = true
    jettyRun.execute()
}

[jettyRunWar, jettyStop]*.stopPort = 8081
[jettyRunWar, jettyStop]*.stopKey = 'stopKey'

functionalTest.doLast {
    jettyStop.execute()
}
